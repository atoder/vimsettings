# ENABLE TRUE COLORS
#set -g default-terminal "tmux-256color"
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",tmux-256color:Tc"

set-option -g default-shell /bin/zsh
set -g mouse on

set-option -g set-titles on
set-option -g set-titles-string "#{session_name} - #{host}"


# New Tmux panes and splits go to the same directoy as current pane
bind c new-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind '"' split-window -h -c "#{pane_current_path}"
bind % split-window -v -c "#{pane_current_path}"

# make scrolling with wheels work
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# CHANGING LAYOUT
# switch to the next layout C-b space
# END of pane movement

# Moving panes around:
# C-{ - move the current pane to the previous position
# C-} - move the current pane to the next position


set -g @resurrect-save 's'
set -g @resurrect-restore 'r'

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf


# START bottom pane windows styling start
#Set the left and right status
# window status
set -g status "on"
set -g status-left-style "none"
set -g message-command-style "fg=#eeeeee,bg=#b2b2b2"
set -g status-style "none,bg=#e4e4e4"
set -g message-style "fg=#eeeeee,bg=#b2b2b2"
set -g pane-border-style "fg=#b2b2b2"
set -g status-right-length "100"
set -g status-left-length "100"
setw -g window-status-activity-style "underscore,fg=#5f8700,bg=#e4e4e4"
setw -g window-status-separator ""
set -g status-left '#[bg=colour7]#[fg=colour0]#{?client_prefix,#[bg=colour2],} ❐ #S #[bg=colour241]#[fg=colour7]#[bg=colour241] #[fg=colour10]♥ #{battery_percentage} #[fg=colour241]#{battery_icon} #[bg=colour235]#[fg=colour241]'
set -g status-right "#[fg=#b2b2b2,bg=#e4e4e4,nobold,nounderscore,noitalics]#[fg=colour235,bg=#b2b2b2] #(date \"+%Y-%b-%d %H:%M\") #[fg=#5f8700,bg=#b2b2b2,nobold,nounderscore,noitalics]#[fg=#eeeeee,bg=#5f8700] #H "



set -g status-justify centre
# grey status bar with cyan writing
set-option -g status-bg colour235


# https://superuser.com/questions/285381/how-does-the-tmux-color-palette-work
#https://nilsdeppe.com/posts/tmux-basics
#https://gist.github.com/coryf/9bfaa2646c12559103a247e897f64ce9

#[fg=colour2] #[bg=colour0]#[fg=colour7]
#set -g status-right 'B:#{battery_percentage} #{battery_remain} C:#{cpu_percentage} | %a %h-%d %H:%M '

set-option -g status-position bottom

setw -g window-status-format "#[fg=#e4e4e4,bg=#e4e4e4,nobold,nounderscore,noitalics]#[default] #I:#W #[fg=#e4e4e4,bg=#e4e4e4,nobold,nounderscore,noitalics]"
setw -g window-status-current-format "#[bg=colour235]#[fg=colour235]#[fg=#e4e4e4,bg=#e4e4e4,nobold,nounderscore,noitalics]#[fg=#e4e4e4,bg=#005f60,none] #I #[fg=#252525,bg=colour10,none] #W #[fg=#e4e4e4,bg=#e4e4e4,nobold,nounderscore,noitalics]"


# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
#bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
#bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
#bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
#bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+




# clear screen
# CTRL + b b
bind-key b send-keys -R \; clear-history

# Resizing windows
# ALT + arrow keys
bind -n M-Left resize-pane -L
bind -n M-Right resize-pane -R
bind -n M-Up resize-pane -U
bind -n M-Down resize-pane -D

# START of pane movement
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

# break pane with C-b !
# OR :break-pane
# to move to a new window and then join or send

# If you have many tmux windows opened,
# you might want to get notified when something happens inside other windows.
setw -g monitor-activity on
set -g visual-activity on

# Reorder tmux windows
# The tmux manpage describes the target-window syntax accepted by swap-window’s -s and -t options.
# Specifically, you can use + and - to refer to the next and previous window numbers.
# Flag -r indicates this key may repeat
bind-key -r < swap-window -t -
bind-key -r > swap-window -t +

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.

# set -g default-command "reattach-to-user-namespace -l /bin/zsh"
set -g default-command 'reattach-to-user-namespace $SHELL --login'

#run-shell '~/.tmux/plugins/tpm/tpm'


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Battery status indicator
#set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-battery-osx'
# CPU monitoring
set -g @plugin 'tmux-plugins/tmux-cpu'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
