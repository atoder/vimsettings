# set -g default-terminal "screen-256color"

# ENABLE TRUE COLORS
#set -g default-terminal "tmux-256color"
#set -ga terminal-overrides ",*256col*:Tc"
set -g default-terminal "tmux-256color"
# tell Tmux that outside terminal supports true color
set -ga terminal-overrides ",xterm-256color*:Tc"



set-option -g default-shell /bin/zsh
set -g mouse on

set-option -g set-titles on
set-option -g set-titles-string "#{session_name} - #{host}"


# New Tmux panes and splits go to the same directoy as current pane
bind c new-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind '"' split-window -h -c "#{pane_current_path}"
bind % split-window -v -c "#{pane_current_path}"

# make scrolling with wheels work
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

set -g @resurrect-save 's'
set -g @resurrect-restore 'r'

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf


# OLD
#set -g status-position bottom
#set -g status-bg colour234
#set -g status-fg colour137
#set -g status-left ''
#set -g status-right '#[fg=colour233,bg=colour241,bold] %m/%d #[fg=colour233,bg=colour245,bold] %H:%M:%S '
#set -g status-right-length 50
#set -g status-left-length 20
#
#setw -g window-status-current-style fg=colour81,bg=colour238
#setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '
#
## alignment settings
#set-option -g status-justify centre
#setw -g window-status-style fg=colour246,bg=colour235
#setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '
#
#setw -g window-status-bell fg=colour225,bg=colour1
# OLD OVER


# START bottom pane windows styling start

#Set the left and right status

# window status

#set -g status-right "#[fg=colour233]#(date +'%a %d') #[fg=green]#(date +'%I:%M%p')#[fg=white] #[bg=black] #{battery_percentage} #{battery_icon}  "
#set -g status-right '#[fg=colour233,bg=colour241,bold] %m/%d #[fg=colour233,bg=colour245,bold] %H:%M:%S #{battery_percentage} #{battery_icon}'

#set -g @batt_charged_icon "üîå"
#set -g @batt_charging_icon "‚ö°"
#set -g @batt_discharging_icon "üîã"
#set -g @batt_attached_icon "‚ö†Ô∏è"

#set -g status-justify "left"
set -g status "on"
set -g status-left-style "none"
set -g message-command-style "fg=#eeeeee,bg=#b2b2b2"
#set -g status-right-style "none"
#set -g pane-active-border-style "fg=#5f8700"
set -g status-style "none,bg=#e4e4e4"
set -g message-style "fg=#eeeeee,bg=#b2b2b2"
set -g pane-border-style "fg=#b2b2b2"
set -g status-right-length "100"
set -g status-left-length "100"
setw -g window-status-activity-style "underscore,fg=#5f8700,bg=#e4e4e4"
setw -g window-status-separator ""
#setw -g window-status-style "none,fg=#5f8700,bg=#e4e4e4"
set -g status-left "#[fg=#eeeeee,bg=#5f8700,none] #S #[fg=#5f8700,bg=#e4e4e4,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=#b2b2b2,bg=#e4e4e4,nobold,nounderscore,noitalics]#[fg=colour235,bg=#b2b2b2] #(date \"+%Y-%b-%d %H:%M\") #[fg=#5f8700,bg=#b2b2b2,nobold,nounderscore,noitalics]#[fg=#eeeeee,bg=#5f8700] #H "



set -g status-justify centre
# grey status bar with cyan writing
set-option -g status-bg colour235
#set-option -g status-fg cyan
#set-option -g status-interval 5
#set-option -g status-left-length 30

#setw -g window-status-format "#[bg=colour246,fg=colour0,noreverse]‚ñà‚ñì‚ñë#I|#W "
#setw -g window-status-current-format "#[bg=colour14,fg=colour0,noreverse]‚ñà‚ñì‚ñë#I|#W "


# https://superuser.com/questions/285381/how-does-the-tmux-color-palette-work
#https://nilsdeppe.com/posts/tmux-basics
#https://gist.github.com/coryf/9bfaa2646c12559103a247e897f64ce9

#[fg=colour2] #[bg=colour0]#[fg=colour7]ÓÇ∞
#set -g status-right 'B:#{battery_percentage} #{battery_remain} C:#{cpu_percentage} | %a %h-%d %H:%M '

set -g status-left '#[bg=colour7]#[fg=colour0]#{?client_prefix,#[bg=colour2],} ‚ùê #S #[bg=colour241]#[fg=colour7]ÓÇ∞#[bg=colour241]#[fg=colour10]‚ô• #{battery_percentage} #[fg=colour241]#{battery_icon} #[bg=colour235]#[fg=colour241]ÓÇ∞'
#set -g status-right '#[fg=colour233,bg=colour241,bold] %m/%d #[fg=colour233,bg=colour245,bold] %H:%M:%S #{batter_icon} '

#set -g status-right '#[fg=colour233,bg=colour241,bold] %m/%d #[fg=colour233,bg=colour245,bold] %H:%M:%S #{battery_percentage} #{battery_icon}'
set-option -g status-position bottom


setw -g window-status-format "#[fg=#e4e4e4,bg=#e4e4e4,nobold,nounderscore,noitalics]#[default] #I:#W #[fg=#e4e4e4,bg=#e4e4e4,nobold,nounderscore,noitalics]"
setw -g window-status-current-format "#[bg=colour235]#[fg=colour235]ÓÇ∞#[fg=#e4e4e4,bg=#e4e4e4,nobold,nounderscore,noitalics]#[fg=#e4e4e4,bg=#005f60,none] #I #[fg=#252525,bg=colour10,none] #W #[fg=#e4e4e4,bg=#e4e4e4,nobold,nounderscore,noitalics]"




# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# clear screen
# CTRL + b b
bind-key b send-keys -R \; clear-history

# Resizing windows
# ALT + arrow keys
bind -n M-Left resize-pane -L
bind -n M-Right resize-pane -R
bind -n M-Up resize-pane -U
bind -n M-Down resize-pane -D

# START of pane movement
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

# break pane with C-b !
# OR :break-pane
# to move to a new window and then join or send

# CHANGING LAYOUT
# switch to the next layout C-b space
# END of pane movement

# Moving panes around:
# C-{ - move the current pane to the previous position
# C-} - move the current pane to the next position

# If you have many tmux windows opened,
# you might want to get notified when something happens inside other windows.
setw -g monitor-activity on
set -g visual-activity on

# Reorder tmux windows
# The tmux manpage describes the target-window syntax accepted by swap-window‚Äôs -s and -t options.
# Specifically, you can use + and - to refer to the next and previous window numbers.
# Flag -r indicates this key may repeat
bind-key -r < swap-window -t -
bind-key -r > swap-window -t +

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.

# set -g default-command "reattach-to-user-namespace -l /bin/zsh"
set -g default-command 'reattach-to-user-namespace $SHELL --login'

#run-shell '~/.tmux/plugins/tpm/tpm'


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Battery status indicator
#set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-battery-osx'
# CPU monitoring
set -g @plugin 'tmux-plugins/tmux-cpu'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
