# set -g default-terminal "screen-256color"

# ENABLE TRUE COLORS
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"

set-option -g default-shell /bin/zsh
set -g mouse on

set-option -g set-titles on
set-option -g set-titles-string "#{session_name} - #{host}"


# New Tmux panes and splits go to the same directoy as current pane
bind c new-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind '"' split-window -h -c "#{pane_current_path}"
bind % split-window -v -c "#{pane_current_path}"

# make scrolling with wheels work
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

set -g @resurrect-save 's'
set -g @resurrect-restore 'r'

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
      tmux-plugins/tmux-sensible       \
          '
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour241,bold] %m/%d #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-style fg=colour81,bg=colour238
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

# alignment settings
set-option -g status-justify centre
setw -g window-status-style fg=colour246,bg=colour235
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell fg=colour225,bg=colour1

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# clear screen
# CTRL + b b
bind-key b send-keys -R \; clear-history

# Resizing windows
# ALT + arrow keys
bind -n M-Left resize-pane -L
bind -n M-Right resize-pane -R
bind -n M-Up resize-pane -U
bind -n M-Down resize-pane -D

# START of pane movement
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

# break pane with C-b !
# OR :break-pane
# to move to a new window and then join or send

# CHANGING LAYOUT
# switch to the next layout C-b space
# END of pane movement

# Moving panes around:
# C-{ - move the current pane to the previous position
# C-} - move the current pane to the next position

# If you have many tmux windows opened,
# you might want to get notified when something happens inside other windows.
setw -g monitor-activity on
set -g visual-activity on

# Reorder tmux windows
# The tmux manpage describes the target-window syntax accepted by swap-windowâ€™s -s and -t options.
# Specifically, you can use + and - to refer to the next and previous window numbers.
# Flag -r indicates this key may repeat
bind-key -r < swap-window -t -
bind-key -r > swap-window -t +

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'
# set -g default-command "reattach-to-user-namespace -l /bin/zsh"
set -g default-command 'reattach-to-user-namespace $SHELL --login'

